const colors={BG_COLOR:[244,244,249],RECT_COLOR:[200,40,25],CIRCLE_COLOR:[8,15,15]}
const RECT_COUNT=65;const RECT_MAXSIZE=300;const RECT_ROTATION=Math.PI/100;const DELAY=1;let K=0;let rectangles=[];let ellipses=[];function setup(){createCanvas(600,600);frameRate(60);for(let i=0;i<RECT_COUNT;i++){rectangles.push(new Rectangle((i+1)*(RECT_MAXSIZE/RECT_COUNT),colors.RECT_COLOR,(RECT_COUNT-i)*(0.3/RECT_COUNT),RECT_ROTATION))}}
function draw(){colorMode(RGB);background(colors.BG_COLOR[0],colors.BG_COLOR[1],colors.BG_COLOR[2]);translate(width/2,height/2);for(let i in rectangles){rectangles[i].draw()}
if(frameCount%DELAY==0){if(K<RECT_COUNT){rectangles[K].rotating=!0;K+=1}else if(!rectangles[RECT_COUNT-1].rotating){K=0}}}
function Rectangle(side,color,opacity,rotationSpeed){this.side=side;this.color=color;this.opacity=opacity;this.rotationSpeed=rotationSpeed;this.totalAngle=PI;this.angle=-this.totalAngle;this.rotating=!1}
Rectangle.prototype.draw=function(){this.rotate();push();rotate(this.angle);noStroke();colorMode(HSB);fill(this.color[0]-2*this.angle,this.color[1]+1.2*this.angle,this.color[2]+1.2*this.angle,this.opacity);rect(-this.side/2,-this.side/2,this.side,this.side);pop()}
Rectangle.prototype.rotate=function(){if(this.rotating){if(this.angle>=this.totalAngle-0.001){this.angle+=-this.totalAngle*2;this.rotating=!1}else{this.angle=lerp(this.angle,this.totalAngle,0.8*this.rotationSpeed)}}}